<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="5" ignored="0" total="6" passed="0">
  <reporter-output>
    <line>
      <![CDATA[Test case name is TC_01_Verify Bangalore , IN' City Info]]>
    </line>
    <line>
      <![CDATA[Test case name is TC_01_Verify Bangalore , IN' City Info]]>
    </line>
    <line>
      <![CDATA[Test case name is TC_02_Verify Delhi , IN' City Info]]>
    </line>
    <line>
      <![CDATA[Test case name is TC_02_Verify Delhi , IN' City Info]]>
    </line>
    <line>
      <![CDATA[Test case name is TC_03_Verify Chandigarh , IN' City Info]]>
    </line>
    <line>
      <![CDATA[Test case name is TC_03_Verify Chandigarh , IN' City Info]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="85963" started-at="2018-08-11T07:53:34Z" finished-at="2018-08-11T07:55:00Z">
    <groups>
    </groups>
    <test name="API GET Test" duration-ms="85963" started-at="2018-08-11T07:53:34Z" finished-at="2018-08-11T07:55:00Z">
      <class name="getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities">
        <test-method status="PASS" signature="onBeforeTest(org.testng.ITestContext)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="onBeforeTest" is-config="true" duration-ms="259" started-at="2018-08-11T07:53:34Z" finished-at="2018-08-11T07:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@74024f3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onBeforeTest -->
        <test-method status="PASS" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="getMethodName" is-config="true" duration-ms="43" started-at="2018-08-11T07:53:35Z" finished-at="2018-08-11T07:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method status="SKIP" signature="TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="TestWeatherAPIWithDataProvider" duration-ms="27629" started-at="2018-08-11T07:53:35Z" data-provider="allCitiesData" finished-at="2018-08-11T07:54:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_01_Verify Bangalore , IN' City Info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9c487f15785a73b553478841e1b0ac5d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[UK]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(TC_03_TestWeatherAPIWithDataProvider_Cities.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test case name is TC_01_Verify Bangalore , IN' City Info]]>
            </line>
          </reporter-output>
        </test-method> <!-- TestWeatherAPIWithDataProvider -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="afterEachTest" is-config="true" duration-ms="20135" started-at="2018-08-11T07:54:03Z" finished-at="2018-08-11T07:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWeatherAPIWithDataProvider status=SKIP method=TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe] output=Test case name is TC_01_Verify Bangalore , IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="getMethodName" is-config="true" duration-ms="27" started-at="2018-08-11T07:54:23Z" finished-at="2018-08-11T07:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method status="FAIL" signature="TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="TestWeatherAPIWithDataProvider" duration-ms="7877" started-at="2018-08-11T07:54:23Z" data-provider="allCitiesData" finished-at="2018-08-11T07:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_01_Verify Bangalore , IN' City Info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9c487f15785a73b553478841e1b0ac5d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[UK]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(TC_03_TestWeatherAPIWithDataProvider_Cities.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test case name is TC_01_Verify Bangalore , IN' City Info]]>
            </line>
          </reporter-output>
        </test-method> <!-- TestWeatherAPIWithDataProvider -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="afterEachTest" is-config="true" duration-ms="8898" started-at="2018-08-11T07:54:31Z" finished-at="2018-08-11T07:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWeatherAPIWithDataProvider status=FAILURE method=TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe] output=Test case name is TC_01_Verify Bangalore , IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="getMethodName" is-config="true" duration-ms="36" started-at="2018-08-11T07:54:40Z" finished-at="2018-08-11T07:54:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method status="FAIL" signature="TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="TestWeatherAPIWithDataProvider" duration-ms="2977" started-at="2018-08-11T07:54:40Z" data-provider="allCitiesData" finished-at="2018-08-11T07:54:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_02_Verify Delhi , IN' City Info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9c487f15785a73b553478841e1b0ac5d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[UK]]>
              </value>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(TC_03_TestWeatherAPIWithDataProvider_Cities.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test case name is TC_02_Verify Delhi , IN' City Info]]>
            </line>
          </reporter-output>
        </test-method> <!-- TestWeatherAPIWithDataProvider -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="afterEachTest" is-config="true" duration-ms="2586" started-at="2018-08-11T07:54:43Z" finished-at="2018-08-11T07:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWeatherAPIWithDataProvider status=FAILURE method=TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe] output=Test case name is TC_02_Verify Delhi , IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="getMethodName" is-config="true" duration-ms="33" started-at="2018-08-11T07:54:46Z" finished-at="2018-08-11T07:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method status="FAIL" signature="TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="TestWeatherAPIWithDataProvider" duration-ms="3014" started-at="2018-08-11T07:54:46Z" data-provider="allCitiesData" finished-at="2018-08-11T07:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_02_Verify Delhi , IN' City Info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Delhi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9c487f15785a73b553478841e1b0ac5d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[UK]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Failed]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(TC_03_TestWeatherAPIWithDataProvider_Cities.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test case name is TC_02_Verify Delhi , IN' City Info]]>
            </line>
          </reporter-output>
        </test-method> <!-- TestWeatherAPIWithDataProvider -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="afterEachTest" is-config="true" duration-ms="2213" started-at="2018-08-11T07:54:49Z" finished-at="2018-08-11T07:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWeatherAPIWithDataProvider status=FAILURE method=TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe] output=Test case name is TC_02_Verify Delhi , IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="getMethodName" is-config="true" duration-ms="31" started-at="2018-08-11T07:54:51Z" finished-at="2018-08-11T07:54:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method status="FAIL" signature="TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="TestWeatherAPIWithDataProvider" duration-ms="3071" started-at="2018-08-11T07:54:51Z" data-provider="allCitiesData" finished-at="2018-08-11T07:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_03_Verify Chandigarh , IN' City Info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chandigarh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9c487f15785a73b553478841e1b0ac5d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[UK]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(TC_03_TestWeatherAPIWithDataProvider_Cities.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test case name is TC_03_Verify Chandigarh , IN' City Info]]>
            </line>
          </reporter-output>
        </test-method> <!-- TestWeatherAPIWithDataProvider -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="afterEachTest" is-config="true" duration-ms="2135" started-at="2018-08-11T07:54:54Z" finished-at="2018-08-11T07:54:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWeatherAPIWithDataProvider status=FAILURE method=TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe] output=Test case name is TC_03_Verify Chandigarh , IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method status="PASS" signature="getMethodName(java.lang.reflect.Method)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="getMethodName" is-config="true" duration-ms="33" started-at="2018-08-11T07:54:56Z" finished-at="2018-08-11T07:54:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMethodName -->
        <test-method status="FAIL" signature="TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="TestWeatherAPIWithDataProvider" duration-ms="1761" started-at="2018-08-11T07:54:56Z" data-provider="allCitiesData" finished-at="2018-08-11T07:54:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC_03_Verify Chandigarh , IN' City Info]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chandigarh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9c487f15785a73b553478841e1b0ac5d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[UK]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Failed]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <300> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <300> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(TC_03_TestWeatherAPIWithDataProvider_Cities.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test case name is TC_03_Verify Chandigarh , IN' City Info]]>
            </line>
          </reporter-output>
        </test-method> <!-- TestWeatherAPIWithDataProvider -->
        <test-method status="PASS" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe]" name="afterEachTest" is-config="true" duration-ms="2326" started-at="2018-08-11T07:54:58Z" finished-at="2018-08-11T07:55:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWeatherAPIWithDataProvider status=FAILURE method=TC_03_TestWeatherAPIWithDataProvider_Cities.TestWeatherAPIWithDataProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities@1d2adfbe] output=Test case name is TC_03_Verify Chandigarh , IN' City Info]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
      </class> <!-- getRequestValidationLatest.TC_03_TestWeatherAPIWithDataProvider_Cities -->
    </test> <!-- API GET Test -->
  </suite> <!-- Suite -->
</testng-results>
